version: "3.8"

services:
  backend:
    build: ./backend
    container_name: backend
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - internal
    labels:
       - "traefik.enable=true"
       - "traefik.http.routers.backend-router.rule=Host(localhost)""
       - "traefik.http.services.backend-service.loadbalancer.server.port=8000"

  db:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: dgh_user
      POSTGRES_PASSWORD: dgh_pass
      POSTGRES_DB: dgh_feedback
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal

  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--providers.file.filename=/dynamic_conf.yml"
    ports:
      - "80:80"
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/traefik.yml
      - ./traefik/dynamic_conf.yml:/dynamic_conf.yml
    networks:
      - internal

volumes:
  pgdata:

networks:
  internal:
    driver: bridge
